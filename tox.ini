[tox]
envlist =
  py,
  doc,
  sty,
passenv = PYTHONPATH
skip_install = True
skip_missing_interpreters = True
skipsdist = True

[testenv]
description =
  Run all unit tests and doctests and compute test coverage
allowlist_externals =
  pytest
commands =
  pytest {posargs:src tests} \
    --cov-fail-under=90 \
    --cov-report=html \
    --cov-report=xml \
    --cov=tensorwaves

[testenv:bench]
description =
  Run benchmark tests and visualize in histogram
allowlist_externals =
  pytest
commands =
  pytest {posargs:benchmarks} \
    --durations=0 \
    --benchmark-autosave \
    -k benchmark

[testenv:deps]
description =
  Visualize module dependencies
deps =
  pydeps
changedir = src
commands =
  pydeps tensorwaves \
    -o ../module_structure.svg \
    --exclude *._* \
    --max-bacon=1 \
    --noshow
passenv = HOME

[testenv:doc]
description =
  Build documentation and API through Sphinx
allowlist_externals =
  sphinx-build
passenv =
  EXECUTE_NB
  GITHUB_REPO
  GITHUB_TOKEN
  READTHEDOCS_VERSION
commands =
  sphinx-build \
    --color \
    --keep-going \
    -TW \
    -b html \
    docs/ docs/_build/html

[testenv:doclive]
description =
  Set up a server to directly preview changes to the HTML pages
allowlist_externals =
  sphinx-autobuild
passenv =
  EXECUTE_NB
  GITHUB_REPO
  GITHUB_TOKEN
  READTHEDOCS_VERSION
  TERM
  TF_GPU_ALLOCATOR
commands =
  sphinx-autobuild \
    --open-browser \
    --re-ignore .*/.ipynb_checkpoints/.* \
    --re-ignore .*/__pycache__/.* \
    --re-ignore docs/.*\.csv \
    --re-ignore docs/.*\.gif \
    --re-ignore docs/.*\.gv \
    --re-ignore docs/.*\.inv \
    --re-ignore docs/.*\.json \
    --re-ignore docs/.*\.pickle \
    --re-ignore docs/.*\.png \
    --re-ignore docs/.*\.svg \
    --re-ignore docs/.*\.yaml \
    --re-ignore docs/.*\.yml \
    --re-ignore docs/_build/.* \
    --re-ignore docs/api/.* \
    --re-ignore docs/usage/logs/.* \
    --re-ignore docs/usage/sub_expr_f? \
    --watch docs \
    --watch src \
    docs/ docs/_build/html

[testenv:docnb]
description =
  Build documentation through Sphinx WITH output of Jupyter notebooks
passenv =
  GITHUB_REPO
  GITHUB_TOKEN
  READTHEDOCS_VERSION
  TF_GPU_ALLOCATOR
setenv =
  EXECUTE_NB = "yes"
allowlist_externals =
  sphinx-build
commands =
  sphinx-build \
    --color \
    --keep-going \
    -TW \
    -b html \
    docs/ docs/_build/html

[testenv:jax]
description =
  Run tests with JAX only
allowlist_externals =
  pytest
commands =
  pytest {posargs:} \
    -k "benchmark or not benchmark" \
    -k "not (ampform or four_momenta or numba or tensorflow or tf)" \
    --benchmark-disable

[testenv:jcache]
description =
  Inspect Jupyter cache
allowlist_externals =
  jcache
changedir = docs/_build
commands =
  jcache {posargs:notebook list}

[testenv:linkcheck]
description =
  Check external links in the documentation (requires internet connection)
passenv =
  EXECUTE_NB
  READTHEDOCS_VERSION
allowlist_externals =
  sphinx-build
commands =
  sphinx-build \
    --color \
    -T \
    -b linkcheck \
    docs/ docs/_build/linkcheck

[testenv:nb]
description =
  Run all notebooks with pytest
allowlist_externals =
  pytest
commands =
  pytest --nbmake {posargs:docs}

[testenv:sty]
description =
  Perform all linting, formatting, and spelling checks
setenv =
  SKIP = pyright
allowlist_externals =
  pre-commit
commands =
  pre-commit run {posargs} -a
